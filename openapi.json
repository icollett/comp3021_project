{
  "openapi": "3.0.0",
  "info": {
    "title": "Employee and Branch Management API Documentation",
    "version": "1.0.0",
    "description": "This is the API documentation for the employee and branch management appliciation."
  },
  "server": [
    {
      "url": "http://localhost:3000/api/v1",
      "description": "Local Server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Branch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for an branch."
          },
          "name": {
            "type": "string",
            "description": "The name of the company branch."
          },
          "phone": {
            "type": "string",
            "description": "Phone number for the branch location."
          },
          "address": {
            "type": "string",
            "description": "Branch location street address."
          }
        }
      },
      "Employee": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for an Employee."
          },
          "name": {
            "type": "string",
            "description": "The name of an employee."
          },
          "position": {
            "type": "string",
            "description": "Position title of an employee."
          },
          "department": {
            "type": "string",
            "description": "Company department the employee works in."
          },
          "email": {
            "type": "string",
            "description": "Work email of an employee."
          },
          "phone": {
            "type": "string",
            "description": "Work phone number of an employee."
          },
          "branchID": {
            "type": "string",
            "description": "Branch ID where the employee works."
          }
        }
      }
    }
  },
  "paths": {
    "/api/v1/branches/": {
      "get": {
        "summary": "Get a list of all current branches.",
        "tags": [
          "Branch"
        ],
        "responses": {
          "200": {
            "description": "List of current branches.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Branch"
                  }
                }
              }
            }
          },
          "442": {
            "description": "Fetch failed."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "post": {
        "summary": "Create a new branch.",
        "tags": [
          "Branch"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created branch.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request fields."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/v1/branches/{id}": {
      "get": {
        "summary": "Find an existing branch using a branchID.",
        "tags": [
          "Branch"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID of the branch to find."
          }
        ],
        "responses": {
          "200": {
            "description": "The branch with the requested ID.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            }
          },
          "420": {
            "description": "Branch not found."
          },
          "442": {
            "description": "Fetch failed."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "put": {
        "summary": "Update an existing branch",
        "tags": [
          "Branch"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID of the branch to update"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The updated branch",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request fields."
          },
          "442": {
            "description": "Branch not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "delete": {
        "summary": "Delete an existing branch",
        "tags": [
          "Branch"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID of the branch to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Branch deleted."
          },
          "442": {
            "description": "Branch not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/v1/employees/": {
      "get": {
        "summary": "Fetch a list of all current employees.",
        "tags": [
          "Employee"
        ],
        "responses": {
          "200": {
            "description": "A list of employee objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Employee"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "post": {
        "summary": "Create a new employee.",
        "tags": [
          "Employee"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "position": {
                    "type": "string"
                  },
                  "department": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "branchID": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Information needed to create an Employee."
          }
        },
        "responses": {
          "201": {
            "description": "The employee with the specified ID.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request fields."
          },
          "442": {
            "description": "Employee creation failed."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/v1/employees/{id}": {
      "get": {
        "summary": "Find an employee by an ID value.",
        "tags": [
          "Employee"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID of the employee to find"
          }
        ],
        "responses": {
          "200": {
            "description": "The employee with the specified ID.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          },
          "420": {
            "description": "Employee not found."
          },
          "442": {
            "description": "Fetch failed."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "put": {
        "summary": "Update an existing employee",
        "tags": [
          "Employee"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID of the employee to update"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "position": {
                    "type": "string"
                  },
                  "department": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "branchID": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated employee",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request fields."
          },
          "442": {
            "description": "Update failed."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "delete": {
        "summary": "Delete an existing Employee",
        "tags": [
          "Employee"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID of the employee to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Employee deleted."
          },
          "442": {
            "description": "Employee not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/v1/employees/branch/{id}": {
      "get": {
        "summary": "Find all employees that work at branchID location.",
        "tags": [
          "Employee"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Branch ID of the location you want the staff list of."
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of Employees that work at branch location ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Employee"
                  }
                }
              }
            }
          },
          "442": {
            "description": "Fetch failed."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/v1/employees/department/{department}": {
      "get": {
        "summary": "Find all employees that work in a department.",
        "tags": [
          "Employee"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "department",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Department name you want the staff list of."
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of Employees that work in said department.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Employee"
                  }
                }
              }
            }
          },
          "442": {
            "description": "Fetch failed."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    }
  },
  "tags": []
}